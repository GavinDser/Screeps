{"code":"import { WallRepairer as wallRepairer } from \"./WallRepairer\";\r\nexport const Builder = {\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        if (creep.memory.working && creep.store.getUsedCapacity() == 0) {\r\n            creep.memory.working = false;\r\n        }\r\n        if (!creep.memory.working && creep.store.getFreeCapacity() == 0) {\r\n            creep.memory.working = true;\r\n        }\r\n        if (creep.memory.working) {\r\n            let storageBuild = creep.room.find(FIND_CONSTRUCTION_SITES, {\r\n                filter: (s) => s.structureType == STRUCTURE_STORAGE\r\n            });\r\n            var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n            if (targets.length) {\r\n                if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n                }\r\n            }\r\n            else {\r\n                wallRepairer.run(creep);\r\n            }\r\n        }\r\n        else {\r\n            let sources = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (s) => s.structureType == STRUCTURE_CONTAINER && s.store[RESOURCE_ENERGY] > 1800\r\n            });\r\n            let source = _.sortBy(sources, (s) => s.store[RESOURCE_ENERGY]).reverse();\r\n            if (source.length) {\r\n                if (creep.withdraw(source[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(source[0]);\r\n                }\r\n            }\r\n            else if (creep.room.storage && creep.room.storage.store[RESOURCE_ENERGY] > 300) {\r\n                if (creep.withdraw(creep.room.storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(creep.room.storage);\r\n                }\r\n            }\r\n            else {\r\n                if (creep.memory.sourceId) {\r\n                    if (creep.harvest(Game.getObjectById(creep.memory.sourceId)) == ERR_NOT_IN_RANGE) {\r\n                        creep.moveTo(Game.getObjectById(creep.memory.sourceId));\r\n                    }\r\n                }\r\n                // else{\r\n                //     if(creep.harvest(creep.pos.findClosestByRange(FIND_SOURCES_ACTIVE)) == ERR_NOT_IN_RANGE) {\r\n                //         creep.moveTo(creep.pos.findClosestByRange(FIND_SOURCES_ACTIVE), {visualizePathStyle: {stroke: '#ffaa00'}});\r\n                //     }\r\n                // }\r\n            }\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=Builder.js.map","references":["/Users/penguin/Documents/Screeps/src/modules/creep/Upgrader.ts","/Users/penguin/Documents/Screeps/src/modules/creep/WallRepairer.ts"],"map":"{\"version\":3,\"file\":\"Builder.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modules/Creep/Builder.ts\"],\"names\":[],\"mappings\":\"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\"}"}
