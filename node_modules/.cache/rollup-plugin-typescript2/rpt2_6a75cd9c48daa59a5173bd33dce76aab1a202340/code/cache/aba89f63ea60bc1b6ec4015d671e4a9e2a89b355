{"code":"export const Attacker = {\r\n    run: function (creep, targetStructure) {\r\n        if (creep.room.name == creep.memory.targetRoom) {\r\n            if (creep.attack(targetStructure) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(targetStructure.pos);\r\n            }\r\n            else if (creep.rangedAttack(targetStructure) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(targetStructure.pos);\r\n                creep.heal(creep);\r\n            }\r\n        }\r\n        else {\r\n            let exit = creep.room.findExitTo(creep.memory.targetRoom);\r\n            creep.moveTo(creep.pos.findClosestByRange(exit));\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=attacker.js.map","references":[],"map":"{\"version\":3,\"file\":\"attacker.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modules/Creep/attacker.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,MAAM,QAAQ,GAAG;IACpB,GAAG,EAAE,UAAS,KAAY,EAAE,eAA6B;QACrD,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,EAAC;YAC3C,IAAI,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,gBAAgB,EAAC;gBAClD,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;aACpC;iBACI,IAAI,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,gBAAgB,EAAC;gBAC7D,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;gBACjC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;SACJ;aACG;YACA,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAiB,CAAC;YAC1E,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;SACpD;IACL,CAAC;CACJ,CAAA\"}"}
