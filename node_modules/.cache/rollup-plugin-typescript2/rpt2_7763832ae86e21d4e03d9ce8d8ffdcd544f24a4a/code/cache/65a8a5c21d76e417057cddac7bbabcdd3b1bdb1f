{"code":"import { Harvester as harvester } from \"./Harvester\";\r\nexport const CrossSourceHarvester = {\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        if (!(creep.hits < creep.hitsMax)) {\r\n            if (!creep.memory.working && creep.store[RESOURCE_ENERGY] == 0) {\r\n                creep.memory.working = true;\r\n            }\r\n            if (creep.memory.working && creep.store.getFreeCapacity() == 0) {\r\n                creep.memory.working = false;\r\n            }\r\n            if (creep.memory.working) {\r\n                let source = Game.getObjectById(creep.memory.sourceId);\r\n                if (creep.room.name == creep.memory.targetRoom) {\r\n                    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                        creep.moveTo(source, { ignoreSwamps: true });\r\n                    }\r\n                }\r\n                // if creep is not in the target room\r\n                else {\r\n                    let exit = creep.room.findExitTo(creep.memory.targetRoom);\r\n                    creep.moveTo(creep.pos.findClosestByRange(exit));\r\n                }\r\n                // finished harvesting\r\n            }\r\n            else {\r\n                if (creep.room.name == creep.memory.homeRoom) {\r\n                    let link = Game.getObjectById(creep.memory.linkId);\r\n                    if (link && link.store.getFreeCapacity(RESOURCE_ENERGY) > 100) {\r\n                        if (creep.transfer(link, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                            creep.moveTo(link);\r\n                        }\r\n                    }\r\n                    else {\r\n                        harvester.run(creep);\r\n                    }\r\n                }\r\n                // if not in home room\r\n                else {\r\n                    let exit = creep.room.findExitTo(creep.memory.homeRoom);\r\n                    creep.moveTo(creep.pos.findClosestByRange(exit), { ignoreSwamps: true });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let position;\r\n            if (creep.memory.homeRoom == \"E35S47\") {\r\n                position = new RoomPosition(7, 22, creep.memory.targetRoom);\r\n            }\r\n            else if (creep.memory.homeRoom == \"E39S47\") {\r\n                position = new RoomPosition(12, 8, creep.memory.targetRoom);\r\n            }\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=CrossSourceHarvester.js.map","references":["D:/Screeps文件/Screeps/src/modules/Creep/Harvester.ts","D:/Screeps文件/Screeps/src/modules/Creep/Builder.ts"],"map":"{\"version\":3,\"file\":\"CrossSourceHarvester.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modules/Creep/CrossSourceHarvester.ts\"],\"names\":[],\"mappings\":\"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\"}"}
