{"code":"import { Harvester as harvester } from \"./Harvester\";\r\nexport const CrossSourceHarvester = {\r\n    /** @param {Creep} creep **/\r\n    run: function (creep, source) {\r\n        if (!creep.memory.working && creep.store[RESOURCE_ENERGY] == 0) {\r\n            creep.memory.working = true;\r\n        }\r\n        if (creep.memory.working && creep.store.getFreeCapacity() == 0) {\r\n            creep.memory.working = false;\r\n        }\r\n        if (creep.memory.working) {\r\n            if (creep.room.name == creep.memory.targetRoom) {\r\n                var droppedEnergy = creep.room.find(FIND_DROPPED_RESOURCES, {\r\n                    filter: (d) => d.amount >= 10\r\n                });\r\n                if (droppedEnergy.length) {\r\n                    if (creep.pickup(droppedEnergy[0]) == ERR_NOT_IN_RANGE) {\r\n                        creep.moveTo(droppedEnergy[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    1;\r\n                    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                        creep.moveTo(source);\r\n                    }\r\n                }\r\n            }\r\n            // if creep is not in the target room\r\n            else {\r\n                let exit = creep.room.findExitTo(creep.memory.targetRoom);\r\n                creep.moveTo(creep.pos.findClosestByRange(exit));\r\n            }\r\n            // finished harvesting\r\n        }\r\n        else {\r\n            if (creep.room.name == creep.memory.homeRoom) {\r\n                // var storage = creep.room.find(FIND_STRUCTURES, {\r\n                //     filter: (s) => {\r\n                //         return s.structureType == STRUCTURE_STORAGE &&\r\n                //         s.store.getFreeCapacity(RESOURCE_ENERGY) > 0\r\n                //     }\r\n                // });\r\n                // if (storage.length){\r\n                //     if(creep.transfer(storage[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                //         creep.moveTo(storage[0], {visualizePathStyle: {stroke: '#ffffff'}});\r\n                //     } \r\n                // }\r\n                // else{\r\n                harvester.run(creep);\r\n                //}\r\n            }\r\n            // if not in home room\r\n            else {\r\n                let exit = creep.room.findExitTo(creep.memory.homeRoom);\r\n                creep.moveTo(creep.pos.findClosestByRange(exit));\r\n            }\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=CrossSourceHarvester.js.map","references":["D:/Screeps/src/modules/Creep/Harvester.ts","D:/Screeps/src/modules/Creep/Builder.ts"],"map":"{\"version\":3,\"file\":\"CrossSourceHarvester.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modules/Creep/CrossSourceHarvester.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,IAAI,SAAS,EAAE,MAAM,aAAa,CAAC;AAGrD,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAEhC,4BAA4B;IAC5B,GAAG,EAAE,UAAS,KAAY,EAAE,MAAc;QACtC,IAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;YAC3D,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;SAC/B;QACD,IAAG,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE;YAC3D,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;SAChC;QAED,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAC;YACrB,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,EAAC;gBAC3C,IAAI,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;oBACxD,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE;iBAChC,CAAC,CAAC;gBACH,IAAI,aAAa,CAAC,MAAM,EAAC;oBACrB,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,EAAC;wBACnD,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;qBAClC;iBACJ;qBACG;oBAAC,CAAC,CAAA;oBACF,IAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,gBAAgB,EAAE;wBAC1C,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;qBACxB;iBACJ;aAEJ;YACD,qCAAqC;iBACjC;gBACA,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAiB,CAAC;gBAC1E,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;aACpD;YAGL,sBAAsB;SACrB;aACG;YACA,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAC;gBACzC,mDAAmD;gBACnD,uBAAuB;gBACvB,yDAAyD;gBACzD,uDAAuD;gBACvD,QAAQ;gBACR,MAAM;gBACN,uBAAuB;gBACvB,4EAA4E;gBAC5E,+EAA+E;gBAC/E,SAAS;gBACT,IAAI;gBACJ,QAAQ;gBACJ,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACzB,GAAG;aAEN;YAED,sBAAsB;iBAClB;gBACA,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAiB,CAAC;gBACxE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;aACpD;SAEJ;IAGD,CAAC;CACR,CAAC\"}"}
